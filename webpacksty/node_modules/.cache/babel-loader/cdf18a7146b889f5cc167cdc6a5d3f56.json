{"ast":null,"code":"var _jsxFileName = \"/Users/henry/Desktop/study/javastyProject/server/webpacksty/src/index.js\";\nimport Jsdemo from './jsdemo';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'; ///todo 1\n\nimport React from 'react'; //创建组件，虚拟dom元素,life cycle\n\nimport ReactDOM from 'react-dom';\nimport AppRouter from \"./AppRouter\"; //将创建好的组件和虚拟dom放入页面展示\n\nlet str = require('./a.js');\n\nlet xhr = new XMLHttpRequest();\n\nconst sayHi = () => {\n  console.log(\"hello babel\");\n};\n\nsayHi(); //http://localhost:8080 webpack-dev-server的服务-》3000\n///todo 2 create 虚拟dom元素,,这里html中是没有属性的，第二个参数为null\n// var h1 = React.createElement('h1',null,'达达的');\n\nvar h1 = React.createElement('h1', {\n  id: 'hhh1',\n  title: 'this is h`'\n}, '达达的');\nvar div = React.createElement(\"div\", null, h1); //todo 3 第二个参数是dom元素而不是selector#app\n// ReactDOM.render(\n//     <Router/>,\n//     '#app',\n// };\n\nReactDOM.render(div, document.getElementById(\"app\")); //todo 在js语言中，默认不能写html类似的标记，打包会失败，\n// 使用babel转换，jsx（符合xml规范的js）语法,本质还是在运行的时候转换成React.createElement的形式\n\nReactDOM.render(React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.getElementById('root')); //http-proxy,请求还是以/api/user的方式\n\nxhr.open(\"GET\", '/api/user', true);\n\nxhr.onload = function () {\n  console.log(xhr.response);\n};\n\nxhr.send(); //ajax四部曲\n\nconsole.log(str);\nconsole.log(\"dafd\"); //js引用css\n\nrequire('./index.css');\n\nrequire('./index.less'); //这样子是不能直接在浏览器中运行的，可以在node中运行run index.js","map":{"version":3,"sources":["/Users/henry/Desktop/study/javastyProject/server/webpacksty/src/index.js"],"names":["Jsdemo","BrowserRouter","Router","Route","Link","React","ReactDOM","AppRouter","str","require","xhr","XMLHttpRequest","sayHi","console","log","h1","createElement","id","title","div","render","document","getElementById","open","onload","response","send"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAC0BC,KAD1B,EACgCC,IADhC,QAEO,kBAFP,C,CAIA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAAyB;;AACzB,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,GAAG,GAAI,IAAIC,cAAJ,EAAX;;AACA,MAAMC,KAAK,GAAG,MAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,CAFD;;AAGAF,KAAK,G,CAEL;AACA;AACA;;AACA,IAAIG,EAAE,GAAGV,KAAK,CAACW,aAAN,CAAoB,IAApB,EAAyB;AAACC,EAAAA,EAAE,EAAC,MAAJ;AAAWC,EAAAA,KAAK,EAAC;AAAjB,CAAzB,EAAwD,KAAxD,CAAT;AAEA,IAAIC,GAAG,GAAEd,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA0B,IAA1B,EAA+BD,EAA/B,CAAT,C,CAEA;AAEA;AACA;AACA;AACA;;AAEAT,QAAQ,CAACc,MAAT,CACED,GADF,EACME,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CADN,E,CAIA;AACA;;AAGAhB,QAAQ,CAACc,MAAT,CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ,E,CAIA;;AACAZ,GAAG,CAACa,IAAJ,CAAS,KAAT,EAAe,WAAf,EAA2B,IAA3B;;AAEAb,GAAG,CAACc,MAAJ,GAAa,YAAU;AACrBX,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACe,QAAhB;AACD,CAFD;;AAGAf,GAAG,CAACgB,IAAJ,G,CAAW;;AACXb,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,OAAO,CAACC,GAAR,CAAY,MAAZ,E,CACA;;AACAL,OAAO,CAAC,aAAD,CAAP;;AACAA,OAAO,CAAC,cAAD,CAAP,C,CAEA","sourcesContent":["import Jsdemo from './jsdemo';\nimport {\n  BrowserRouter as Router,Route,Link\n} from 'react-router-dom';\n\n///todo 1\nimport React from 'react'//创建组件，虚拟dom元素,life cycle\nimport ReactDOM from 'react-dom'\nimport AppRouter from \"./AppRouter\";\n//将创建好的组件和虚拟dom放入页面展示\nlet str = require('./a.js');\nlet xhr  = new XMLHttpRequest();\nconst sayHi = ()=>{\n  console.log(\"hello babel\")\n}\nsayHi()\n\n//http://localhost:8080 webpack-dev-server的服务-》3000\n///todo 2 create 虚拟dom元素,,这里html中是没有属性的，第二个参数为null\n// var h1 = React.createElement('h1',null,'达达的');\nvar h1 = React.createElement('h1',{id:'hhh1',title:'this is h`'},'达达的');\n\nvar div =React.createElement(\"div\",null,h1);\n\n//todo 3 第二个参数是dom元素而不是selector#app\n\n// ReactDOM.render(\n//     <Router/>,\n//     '#app',\n// };\n\nReactDOM.render(\n  div,document.getElementById(\"app\")\n);\n\n//todo 在js语言中，默认不能写html类似的标记，打包会失败，\n// 使用babel转换，jsx（符合xml规范的js）语法,本质还是在运行的时候转换成React.createElement的形式\n\n\nReactDOM.render(\n    <Router/>,\n    document.getElementById('root')\n);\n//http-proxy,请求还是以/api/user的方式\nxhr.open(\"GET\",'/api/user',true);\n\nxhr.onload = function(){\n  console.log(xhr.response);\n};\nxhr.send();//ajax四部曲\nconsole.log(str);\nconsole.log(\"dafd\");\n//js引用css\nrequire('./index.css');\nrequire('./index.less')\n\n//这样子是不能直接在浏览器中运行的，可以在node中运行run index.js"]},"metadata":{},"sourceType":"module"}